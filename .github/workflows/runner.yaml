name: Start Helix Runner

on:
  workflow_call:
    inputs:
      yaml_repo:
        description: 'The repository containing the deployment yaml.'
        required: true
        type: string

      deployment_yaml_path:
        description: 'The deployment file path within @yaml_repo.'
        required: false
        type: string
        default: './deployment.yaml'

      workflow_run_id:
        description: 'The workflow run ID of the calling workflow.'
        required: true
        type: string

jobs:
  generate_registration_token:
    name: generate_registration_token
    runs-on: ubuntu-latest
    outputs:
      registration_token: ${{ steps.generate-token.outputs.registration_token }}
    steps:
      - id: generate-token
        run: |-
          export REGISTRATION_TOKEN=$(curl -X POST -H 'Accept: application/vnd.github+json' -H 'Authorization: token ${{ secrets.GH_PAT }}' https://api.github.com/orgs/HelixBooking/actions/runners/registration-token | jq .token)

      - name: Check Registration Token
        run: |-
          echo $REGISTRATION_TOKEN

      - name: Set Outputs
        run: |-
          echo "::setoutput name=registration_token::$REGISTRATION_TOKEN"

  start_runner:
    name: Start Helix Runner
    runs-on: ubuntu-latest
    needs: generate_registration_token
    steps:
      - name: 'Authenticate to GKE'
        run: |-
          cd ${HOME}
          echo "${{ secrets.ARTIFACT_REGISTRY_CREDENTIALS }}" | base64 -d > "./gcloud.json"
          gcloud auth activate-service-account --key-file="./gcloud.json"
      - run: |-
          gcloud container clusters get-credentials helix \
          --zone us-east1 \
          --project ${{ secrets.GCLOUD_PROJECT_ID }}

      - uses: actions/checkout@v3
        with:
          repository: ${{ inputs.yaml_repo }}
          ref: main    
          token: ${{ secrets.GH_PAT }}

      - run: sed 's/RUNNER_NAME/helix-runner-${{ inputs.workflow_run_id }}/' deployment.yaml
      - run: sed 's/GITHUB_REGISTRATION_TOKEN/ ${{ needs.generate_registration_token.outputs.registration_token }}/' deployment.yaml
      - run: kubectl apply -f ${{ inputs.deployment_yaml_path }}
